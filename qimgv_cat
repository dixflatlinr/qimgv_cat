#!/usr/bin/env python3

"""
Used as a tool to move images into specific folders/categories when sorting images with qimgv.

Define a script in qimgv:
/usr/local/bin/qimgv_cat streetphoto %file%

And assign a hotkey to it, and voila with one press of a key you can move the image to the 
category of your choice.

---

qimgv_cat street /home/user/myimage.jpg

Will 
- create a subdir 'street' where myimage.jpg resides
- move the myimage.jpg into that subdir (/home/usr/street/)
- if file exists at destination, file gets auto renamed

Note: Only uses builtins. That's why calling notify-send as a binary.
"""

import os, sys, argparse
import re, random, string
import syslog, subprocess, shlex

def genFilenameWithSubfix(fn, len=5):
    path = os.path.dirname(fn)
    filename = os.path.basename(fn)

    name, ext = os.path.splitext(filename)
    random_suffix = ''.join(random.choices(string.ascii_letters + string.digits, k=len))
    newFilename = f"{name}_{random_suffix}{ext}"

    return os.path.join(path, newFilename)

def move_image(cat, img):
    dirDest = os.path.join(os.path.dirname(img), cat)
    fnImage = os.path.basename(img)

    os.makedirs(dirDest, mode=0o775, exist_ok=True)#exceptionne?

    fnTarget = os.path.join(dirDest, fnImage)
    #file exists @ desto, so add a random subfix
    if os.path.exists(fnTarget):
        fnTarget = genFilenameWithSubfix(fnTarget)

    try:
        os.rename(img, fnTarget)
    except PermissionError:
        print('File cannot be moved! Permission error!')
        exit(1)

def binaryExists(filename):
    fn = shlex.quote(filename)
    result = subprocess.run(f'command -v {fn}', shell=True, stdout=subprocess.PIPE)
    return not bool(result.returncode)

def sendNotify(msg):
    #title = shlex.quote(title)
    msg = shlex.quote(msg)

    result = subprocess.run(f'notify-send -u critical -a qimgv_cat -t 3000 -i error qimgv_cat {msg}', shell=True, stdout=subprocess.PIPE)

def x(str, code, priority = syslog.LOG_ERR, prefix='Error: '):
    msg = prefix + str
    syslog.syslog(priority, msg)
    print(msg)

    if showMessageWindow:
        sendNotify(msg)

    exit(code)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Moves the provided file into a category dir where the image_file resides.')
    parser.add_argument("category", help="Category directory name")
    parser.add_argument("image_file", help="Image file to move")
    args = parser.parse_args()

    showMessageWindow = binaryExists('notify-send')

    if not os.path.exists(args.image_file):
        x(f'Image_file "{args.image_file}" cannot be found!', 1)

    if not re.match('^[a-z0-9-_]+$',args.category):
        x('Only alnum chars plus hyphen and dash are allowed in category names!',1)

    move_image(args.category, args.image_file)
